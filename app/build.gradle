plugins {
    id "com.android.application"
    id "kotlin-android"
    id "kotlin-parcelize"
    id "kotlin-kapt"
    id "androidx.navigation.safeargs.kotlin"
    id "dagger.hilt.android.plugin"
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "dev.alimansour.iweather"
        minSdk 21
        targetSdk 31
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        buildConfigField("String", "API_KEY", apiKey)
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    testOptions.unitTests {
        includeAndroidResources = true
        returnDefaultValues = true
    }
    buildFeatures {
        dataBinding = true
    }
    packagingOptions {
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
    }
    sourceSets {
        androidTest.java.srcDirs += "src/testShared/java"
        test.java.srcDirs += "src/testShared/java"
    }
}

dependencies {

    //Base
    implementation "androidx.core:core-ktx:1.7.0"
    implementation "androidx.appcompat:appcompat:1.3.1"
    implementation "com.google.android.material:material:1.4.0"
    implementation "androidx.constraintlayout:constraintlayout:2.1.1"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.vectordrawable:vectordrawable:1.1.0"
    implementation "androidx.fragment:fragment-ktx:1.3.6"
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    //Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    //Multidex
    implementation "androidx.multidex:multidex:$multidex_version"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Gson
    implementation "com.google.code.gson:gson:$gson_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp3_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3_version"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:$okhttp3_version"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$retrofit_coroutines_adapter_version"

    // Lifecycle Runtime
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    //Livedata
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")

    // Annotation processor
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // Timber
    implementation "com.jakewharton.timber:timber:$timber_version"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // Unit Testing
    testImplementation "junit:junit:$junit_version"
    testImplementation "androidx.arch.core:core-testing:$arch_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"
    testImplementation "com.google.truth:truth:$truth_version"
    testImplementation"org.mockito:mockito-inline:$mockito_version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp3_version"

    // AndroidX Test - JVM Testing
    testImplementation "androidx.test:core-ktx:$androidx_test_core_version"
    testImplementation "androidx.test.ext:junit-ktx:$androidX_test_ext_kotlin_runner_version"
    testImplementation "androidx.test:rules:$androidX_test_rules_version"

    // AndroidX Test - Instrumented Testing
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidX_test_ext_kotlin_runner_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$esporesso_version"
    androidTestImplementation "com.google.truth:truth:$truth_version"
    androidTestImplementation "androidx.test:core-ktx:$androidx_test_core_version"
    androidTestImplementation "androidx.arch.core:core-testing:$arch_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$okhttp3_version"
}